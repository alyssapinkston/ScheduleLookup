<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ScheduleLookup30DataSet2" targetNamespace="http://tempuri.org/ScheduleLookup30DataSet2.xsd" xmlns:mstns="http://tempuri.org/ScheduleLookup30DataSet2.xsd" xmlns="http://tempuri.org/ScheduleLookup30DataSet2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" GeneratorFunctionsComponentClassName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" UserFunctionsComponentName="QueriesTableAdapter" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ScheduleLookup30ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ScheduleLookup30ConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ScheduleLookup.Properties.Settings.GlobalReference.Default.ScheduleLookup30ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Belong_ToTableAdapter" GeneratorDataComponentClassName="Belong_ToTableAdapter" Name="Belong_To" UserDataComponentName="Belong_ToTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ScheduleLookup30ConnectionString (Settings)" DbObjectName="ScheduleLookup30.dbo.Belong_To" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Belong_To] WHERE (([Course_ID] = @Original_Course_ID) AND ([Dept_ID] = @Original_Dept_ID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Course_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Course_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Dept_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Dept_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Belong_To] ([Course_ID], [Dept_ID]) VALUES (@Course_ID, @Dept_ID);
SELECT Course_ID, Dept_ID FROM Belong_To WHERE (Course_ID = @Course_ID) AND (Dept_ID = @Dept_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Course_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Course_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Dept_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Dept_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Course_ID, Dept_ID FROM dbo.Belong_To</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Belong_To] SET [Course_ID] = @Course_ID, [Dept_ID] = @Dept_ID WHERE (([Course_ID] = @Original_Course_ID) AND ([Dept_ID] = @Original_Dept_ID));
SELECT Course_ID, Dept_ID FROM Belong_To WHERE (Course_ID = @Course_ID) AND (Dept_ID = @Dept_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Course_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Course_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Dept_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Dept_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Course_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Course_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Dept_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Dept_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Course_ID" DataSetColumn="Course_ID" />
              <Mapping SourceColumn="Dept_ID" DataSetColumn="Dept_ID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CourseTableAdapter" GeneratorDataComponentClassName="CourseTableAdapter" Name="Course" UserDataComponentName="CourseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ScheduleLookup30ConnectionString (Settings)" DbObjectName="ScheduleLookup30.dbo.Course" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Course] WHERE (([Course_ID] = @Original_Course_ID) AND ((@IsNull_Title = 1 AND [Title] IS NULL) OR ([Title] = @Original_Title)) AND ([CreditHours] = @Original_CreditHours) AND ((@IsNull_FinalExamSchedule = 1 AND [FinalExamSchedule] IS NULL) OR ([FinalExamSchedule] = @Original_FinalExamSchedule)) AND ((@IsNull_Abbreviation = 1 AND [Abbreviation] IS NULL) OR ([Abbreviation] = @Original_Abbreviation)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Course_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Course_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Title" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Title" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CreditHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreditHours" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_FinalExamSchedule" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FinalExamSchedule" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_FinalExamSchedule" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FinalExamSchedule" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Abbreviation" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Abbreviation" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Abbreviation" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Abbreviation" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Course] ([Course_ID], [Title], [CreditHours], [FinalExamSchedule], [Abbreviation]) VALUES (@Course_ID, @Title, @CreditHours, @FinalExamSchedule, @Abbreviation);
SELECT Course_ID, Title, CreditHours, FinalExamSchedule, Abbreviation FROM Course WHERE (Course_ID = @Course_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Course_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Course_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Title" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CreditHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreditHours" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FinalExamSchedule" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FinalExamSchedule" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Abbreviation" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Abbreviation" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Course_ID, Title, CreditHours, FinalExamSchedule, Abbreviation FROM dbo.Course</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Course] SET [Course_ID] = @Course_ID, [Title] = @Title, [CreditHours] = @CreditHours, [FinalExamSchedule] = @FinalExamSchedule, [Abbreviation] = @Abbreviation WHERE (([Course_ID] = @Original_Course_ID) AND ((@IsNull_Title = 1 AND [Title] IS NULL) OR ([Title] = @Original_Title)) AND ([CreditHours] = @Original_CreditHours) AND ((@IsNull_FinalExamSchedule = 1 AND [FinalExamSchedule] IS NULL) OR ([FinalExamSchedule] = @Original_FinalExamSchedule)) AND ((@IsNull_Abbreviation = 1 AND [Abbreviation] IS NULL) OR ([Abbreviation] = @Original_Abbreviation)));
SELECT Course_ID, Title, CreditHours, FinalExamSchedule, Abbreviation FROM Course WHERE (Course_ID = @Course_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Course_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Course_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Title" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CreditHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreditHours" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FinalExamSchedule" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FinalExamSchedule" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Abbreviation" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Abbreviation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Course_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Course_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Title" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Title" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CreditHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreditHours" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_FinalExamSchedule" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FinalExamSchedule" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_FinalExamSchedule" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FinalExamSchedule" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Abbreviation" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Abbreviation" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Abbreviation" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Abbreviation" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Course_ID" DataSetColumn="Course_ID" />
              <Mapping SourceColumn="Title" DataSetColumn="Title" />
              <Mapping SourceColumn="CreditHours" DataSetColumn="CreditHours" />
              <Mapping SourceColumn="FinalExamSchedule" DataSetColumn="FinalExamSchedule" />
              <Mapping SourceColumn="Abbreviation" DataSetColumn="Abbreviation" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DepartmentTableAdapter" GeneratorDataComponentClassName="DepartmentTableAdapter" Name="Department" UserDataComponentName="DepartmentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ScheduleLookup30ConnectionString (Settings)" DbObjectName="ScheduleLookup30.dbo.Department" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Department] WHERE (((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)) AND ([ID] = @Original_ID) AND ((@IsNull_Abbreviation = 1 AND [Abbreviation] IS NULL) OR ([Abbreviation] = @Original_Abbreviation)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Abbreviation" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Abbreviation" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Abbreviation" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Abbreviation" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Department] ([Name], [ID], [Abbreviation]) VALUES (@Name, @ID, @Abbreviation);
SELECT Name, ID, Abbreviation FROM Department WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Abbreviation" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Abbreviation" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Name, ID, Abbreviation FROM dbo.Department</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Department] SET [Name] = @Name, [ID] = @ID, [Abbreviation] = @Abbreviation WHERE (((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)) AND ([ID] = @Original_ID) AND ((@IsNull_Abbreviation = 1 AND [Abbreviation] IS NULL) OR ([Abbreviation] = @Original_Abbreviation)));
SELECT Name, ID, Abbreviation FROM Department WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Abbreviation" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Abbreviation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Abbreviation" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Abbreviation" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Abbreviation" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Abbreviation" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Abbreviation" DataSetColumn="Abbreviation" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Enrolled_InTableAdapter" GeneratorDataComponentClassName="Enrolled_InTableAdapter" Name="Enrolled_In" UserDataComponentName="Enrolled_InTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ScheduleLookup30ConnectionString (Settings)" DbObjectName="ScheduleLookup30.dbo.Enrolled_In" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Enrolled_In] WHERE (([Student_ID] = @Original_Student_ID) AND ([Section_CRN] = @Original_Section_CRN))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Student_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Student_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Section_CRN" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Section_CRN" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Enrolled_In] ([Student_ID], [Section_CRN]) VALUES (@Student_ID, @Section_CRN);
SELECT Student_ID, Section_CRN FROM Enrolled_In WHERE (Section_CRN = @Section_CRN) AND (Student_ID = @Student_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Student_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Student_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Section_CRN" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Section_CRN" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Student_ID, Section_CRN FROM dbo.Enrolled_In</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Enrolled_In] SET [Student_ID] = @Student_ID, [Section_CRN] = @Section_CRN WHERE (([Student_ID] = @Original_Student_ID) AND ([Section_CRN] = @Original_Section_CRN));
SELECT Student_ID, Section_CRN FROM Enrolled_In WHERE (Section_CRN = @Section_CRN) AND (Student_ID = @Student_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Student_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Student_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Section_CRN" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Section_CRN" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Student_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Student_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Section_CRN" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Section_CRN" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Student_ID" DataSetColumn="Student_ID" />
              <Mapping SourceColumn="Section_CRN" DataSetColumn="Section_CRN" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="HasTableAdapter" GeneratorDataComponentClassName="HasTableAdapter" Name="Has" UserDataComponentName="HasTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ScheduleLookup30ConnectionString (Settings)" DbObjectName="ScheduleLookup30.dbo.Has" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Has] WHERE (([Student_ID] = @Original_Student_ID) AND ([Major_Name] = @Original_Major_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Student_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Student_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Major_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Major_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Has] ([Student_ID], [Major_Name]) VALUES (@Student_ID, @Major_Name);
SELECT Student_ID, Major_Name FROM Has WHERE (Major_Name = @Major_Name) AND (Student_ID = @Student_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Student_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Student_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Major_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Major_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Student_ID, Major_Name FROM dbo.Has</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Has] SET [Student_ID] = @Student_ID, [Major_Name] = @Major_Name WHERE (([Student_ID] = @Original_Student_ID) AND ([Major_Name] = @Original_Major_Name));
SELECT Student_ID, Major_Name FROM Has WHERE (Major_Name = @Major_Name) AND (Student_ID = @Student_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Student_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Student_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Major_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Major_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Student_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Student_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Major_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Major_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Student_ID" DataSetColumn="Student_ID" />
              <Mapping SourceColumn="Major_Name" DataSetColumn="Major_Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MajorTableAdapter" GeneratorDataComponentClassName="MajorTableAdapter" Name="Major" UserDataComponentName="MajorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ScheduleLookup30ConnectionString (Settings)" DbObjectName="ScheduleLookup30.dbo.Major" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Major] WHERE (([Name] = @Original_Name) AND ((@IsNull_Department_ID = 1 AND [Department_ID] IS NULL) OR ([Department_ID] = @Original_Department_ID)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Department_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Department_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Department_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Department_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Major] ([Name], [Department_ID]) VALUES (@Name, @Department_ID);
SELECT Name, Department_ID FROM Major WHERE (Name = @Name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Department_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Department_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Name, Department_ID FROM dbo.Major</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Major] SET [Name] = @Name, [Department_ID] = @Department_ID WHERE (([Name] = @Original_Name) AND ((@IsNull_Department_ID = 1 AND [Department_ID] IS NULL) OR ([Department_ID] = @Original_Department_ID)));
SELECT Name, Department_ID FROM Major WHERE (Name = @Name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Department_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Department_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Department_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Department_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Department_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Department_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Department_ID" DataSetColumn="Department_ID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PersonTableAdapter" GeneratorDataComponentClassName="PersonTableAdapter" Name="Person" UserDataComponentName="PersonTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ScheduleLookup30ConnectionString (Settings)" DbObjectName="ScheduleLookup30.dbo.Person" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Person] WHERE (([Username] = @Original_Username) AND ([ID] = @Original_ID) AND ((@IsNull_Email = 1 AND [Email] IS NULL) OR ([Email] = @Original_Email)) AND ((@IsNull_FName = 1 AND [FName] IS NULL) OR ([FName] = @Original_FName)) AND ((@IsNull_LName = 1 AND [LName] IS NULL) OR ([LName] = @Original_LName)) AND ((@IsNull_CampusMail = 1 AND [CampusMail] IS NULL) OR ([CampusMail] = @Original_CampusMail)) AND ((@IsNull_PasswordSalt = 1 AND [PasswordSalt] IS NULL) OR ([PasswordSalt] = @Original_PasswordSalt)) AND ((@IsNull_PasswordHash = 1 AND [PasswordHash] IS NULL) OR ([PasswordHash] = @Original_PasswordHash)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Email" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Email" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_FName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_FName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CampusMail" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CampusMail" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CampusMail" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CampusMail" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_PasswordSalt" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PasswordSalt" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_PasswordSalt" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PasswordSalt" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_PasswordHash" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PasswordHash" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_PasswordHash" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PasswordHash" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Person] ([Username], [ID], [Email], [FName], [LName], [CampusMail], [PasswordSalt], [PasswordHash]) VALUES (@Username, @ID, @Email, @FName, @LName, @CampusMail, @PasswordSalt, @PasswordHash);
SELECT Username, ID, Email, FName, LName, CampusMail, PasswordSalt, PasswordHash FROM Person WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CampusMail" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CampusMail" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PasswordSalt" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PasswordSalt" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PasswordHash" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PasswordHash" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Username, ID, Email, FName, LName, CampusMail, PasswordSalt, PasswordHash FROM dbo.Person</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Person] SET [Username] = @Username, [ID] = @ID, [Email] = @Email, [FName] = @FName, [LName] = @LName, [CampusMail] = @CampusMail, [PasswordSalt] = @PasswordSalt, [PasswordHash] = @PasswordHash WHERE (([Username] = @Original_Username) AND ([ID] = @Original_ID) AND ((@IsNull_Email = 1 AND [Email] IS NULL) OR ([Email] = @Original_Email)) AND ((@IsNull_FName = 1 AND [FName] IS NULL) OR ([FName] = @Original_FName)) AND ((@IsNull_LName = 1 AND [LName] IS NULL) OR ([LName] = @Original_LName)) AND ((@IsNull_CampusMail = 1 AND [CampusMail] IS NULL) OR ([CampusMail] = @Original_CampusMail)) AND ((@IsNull_PasswordSalt = 1 AND [PasswordSalt] IS NULL) OR ([PasswordSalt] = @Original_PasswordSalt)) AND ((@IsNull_PasswordHash = 1 AND [PasswordHash] IS NULL) OR ([PasswordHash] = @Original_PasswordHash)));
SELECT Username, ID, Email, FName, LName, CampusMail, PasswordSalt, PasswordHash FROM Person WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Email" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CampusMail" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CampusMail" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PasswordSalt" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PasswordSalt" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PasswordHash" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PasswordHash" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Email" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Email" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_FName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_FName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CampusMail" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CampusMail" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CampusMail" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CampusMail" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_PasswordSalt" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PasswordSalt" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_PasswordSalt" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PasswordSalt" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_PasswordHash" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PasswordHash" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_PasswordHash" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PasswordHash" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Username" DataSetColumn="Username" />
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Email" DataSetColumn="Email" />
              <Mapping SourceColumn="FName" DataSetColumn="FName" />
              <Mapping SourceColumn="LName" DataSetColumn="LName" />
              <Mapping SourceColumn="CampusMail" DataSetColumn="CampusMail" />
              <Mapping SourceColumn="PasswordSalt" DataSetColumn="PasswordSalt" />
              <Mapping SourceColumn="PasswordHash" DataSetColumn="PasswordHash" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProfessorTableAdapter" GeneratorDataComponentClassName="ProfessorTableAdapter" Name="Professor" UserDataComponentName="ProfessorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ScheduleLookup30ConnectionString (Settings)" DbObjectName="ScheduleLookup30.dbo.Professor" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Professor] WHERE (([ID] = @Original_ID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Professor] ([ID]) VALUES (@ID);
SELECT ID FROM Professor WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID FROM dbo.Professor</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Professor] SET [ID] = @ID WHERE (([ID] = @Original_ID));
SELECT ID FROM Professor WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SectionTableAdapter" GeneratorDataComponentClassName="SectionTableAdapter" Name="Section" UserDataComponentName="SectionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ScheduleLookup30ConnectionString (Settings)" DbObjectName="ScheduleLookup30.dbo.Section" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Section] WHERE (([CRN] = @Original_CRN) AND ((@IsNull_Capacity = 1 AND [Capacity] IS NULL) OR ([Capacity] = @Original_Capacity)) AND ((@IsNull_TermSchedule = 1 AND [TermSchedule] IS NULL) OR ([TermSchedule] = @Original_TermSchedule)) AND ((@IsNull_Comments = 1 AND [Comments] IS NULL) OR ([Comments] = @Original_Comments)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CRN" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CRN" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Capacity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Capacity" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Capacity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Capacity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TermSchedule" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TermSchedule" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TermSchedule" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TermSchedule" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Comments" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Comments" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Comments" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Comments" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Section] ([CRN], [Capacity], [TermSchedule], [Comments]) VALUES (@CRN, @Capacity, @TermSchedule, @Comments);
SELECT CRN, Capacity, TermSchedule, Comments FROM Section WHERE (CRN = @CRN)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CRN" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CRN" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Capacity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Capacity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TermSchedule" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TermSchedule" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Comments" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Comments" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CRN, Capacity, TermSchedule, Comments FROM dbo.Section</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Section] SET [CRN] = @CRN, [Capacity] = @Capacity, [TermSchedule] = @TermSchedule, [Comments] = @Comments WHERE (([CRN] = @Original_CRN) AND ((@IsNull_Capacity = 1 AND [Capacity] IS NULL) OR ([Capacity] = @Original_Capacity)) AND ((@IsNull_TermSchedule = 1 AND [TermSchedule] IS NULL) OR ([TermSchedule] = @Original_TermSchedule)) AND ((@IsNull_Comments = 1 AND [Comments] IS NULL) OR ([Comments] = @Original_Comments)));
SELECT CRN, Capacity, TermSchedule, Comments FROM Section WHERE (CRN = @CRN)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CRN" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CRN" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Capacity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Capacity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TermSchedule" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TermSchedule" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Comments" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Comments" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CRN" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CRN" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Capacity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Capacity" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Capacity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Capacity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TermSchedule" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TermSchedule" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TermSchedule" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TermSchedule" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Comments" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Comments" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Comments" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Comments" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CRN" DataSetColumn="CRN" />
              <Mapping SourceColumn="Capacity" DataSetColumn="Capacity" />
              <Mapping SourceColumn="TermSchedule" DataSetColumn="TermSchedule" />
              <Mapping SourceColumn="Comments" DataSetColumn="Comments" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentTableAdapter" GeneratorDataComponentClassName="StudentTableAdapter" Name="Student" UserDataComponentName="StudentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ScheduleLookup30ConnectionString (Settings)" DbObjectName="ScheduleLookup30.dbo.Student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Student] WHERE (([ID] = @Original_ID) AND ((@IsNull_Advisor = 1 AND [Advisor] IS NULL) OR ([Advisor] = @Original_Advisor)) AND ([Year] = @Original_Year) AND ([Class] = @Original_Class))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Advisor" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Advisor" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Advisor" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Advisor" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Year" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Year" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Class" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Class" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Student] ([ID], [Advisor], [Year], [Class]) VALUES (@ID, @Advisor, @Year, @Class);
SELECT ID, Advisor, Year, Class FROM Student WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Advisor" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Advisor" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Year" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Year" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Class" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Class" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Advisor, Year, Class FROM dbo.Student</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Student] SET [ID] = @ID, [Advisor] = @Advisor, [Year] = @Year, [Class] = @Class WHERE (([ID] = @Original_ID) AND ((@IsNull_Advisor = 1 AND [Advisor] IS NULL) OR ([Advisor] = @Original_Advisor)) AND ([Year] = @Original_Year) AND ([Class] = @Original_Class));
SELECT ID, Advisor, Year, Class FROM Student WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Advisor" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Advisor" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Year" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Year" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Class" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Class" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Advisor" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Advisor" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Advisor" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Advisor" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Year" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Year" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Class" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Class" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Advisor" DataSetColumn="Advisor" />
              <Mapping SourceColumn="Year" DataSetColumn="Year" />
              <Mapping SourceColumn="Class" DataSetColumn="Class" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TeachesTableAdapter" GeneratorDataComponentClassName="TeachesTableAdapter" Name="Teaches" UserDataComponentName="TeachesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ScheduleLookup30ConnectionString (Settings)" DbObjectName="ScheduleLookup30.dbo.Teaches" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Teaches] WHERE (([Professor_ID] = @Original_Professor_ID) AND ([Section_CRN] = @Original_Section_CRN))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Professor_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Professor_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Section_CRN" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Section_CRN" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Teaches] ([Professor_ID], [Section_CRN]) VALUES (@Professor_ID, @Section_CRN);
SELECT Professor_ID, Section_CRN FROM Teaches WHERE (Professor_ID = @Professor_ID) AND (Section_CRN = @Section_CRN)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Professor_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Professor_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Section_CRN" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Section_CRN" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Professor_ID, Section_CRN FROM dbo.Teaches</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Teaches] SET [Professor_ID] = @Professor_ID, [Section_CRN] = @Section_CRN WHERE (([Professor_ID] = @Original_Professor_ID) AND ([Section_CRN] = @Original_Section_CRN));
SELECT Professor_ID, Section_CRN FROM Teaches WHERE (Professor_ID = @Professor_ID) AND (Section_CRN = @Section_CRN)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Professor_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Professor_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Section_CRN" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Section_CRN" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Professor_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Professor_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Section_CRN" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Section_CRN" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Professor_ID" DataSetColumn="Professor_ID" />
              <Mapping SourceColumn="Section_CRN" DataSetColumn="Section_CRN" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Works_ForTableAdapter" GeneratorDataComponentClassName="Works_ForTableAdapter" Name="Works_For" UserDataComponentName="Works_ForTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ScheduleLookup30ConnectionString (Settings)" DbObjectName="ScheduleLookup30.dbo.Works_For" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Works_For] WHERE (([Professor_ID] = @Original_Professor_ID) AND ([Dept_ID] = @Original_Dept_ID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Professor_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Professor_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Dept_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Dept_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Works_For] ([Professor_ID], [Dept_ID]) VALUES (@Professor_ID, @Dept_ID);
SELECT Professor_ID, Dept_ID FROM Works_For WHERE (Dept_ID = @Dept_ID) AND (Professor_ID = @Professor_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Professor_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Professor_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Dept_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Dept_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Professor_ID, Dept_ID FROM dbo.Works_For</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Works_For] SET [Professor_ID] = @Professor_ID, [Dept_ID] = @Dept_ID WHERE (([Professor_ID] = @Original_Professor_ID) AND ([Dept_ID] = @Original_Dept_ID));
SELECT Professor_ID, Dept_ID FROM Works_For WHERE (Dept_ID = @Dept_ID) AND (Professor_ID = @Professor_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Professor_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Professor_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Dept_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Dept_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Professor_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Professor_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Dept_ID" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Dept_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Professor_ID" DataSetColumn="Professor_ID" />
              <Mapping SourceColumn="Dept_ID" DataSetColumn="Dept_ID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Advisor RosterTableAdapter" GeneratorDataComponentClassName="Advisor_RosterTableAdapter" Name="Advisor Roster" UserDataComponentName="Advisor RosterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ScheduleLookup30ConnectionString (Settings)" DbObjectName="ScheduleLookup30.dbo.[Advisor Roster]" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Advisor, FName, LName, ID, Email, CampusMail FROM dbo.[Advisor Roster]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Advisor" DataSetColumn="Advisor" />
              <Mapping SourceColumn="FName" DataSetColumn="FName" />
              <Mapping SourceColumn="LName" DataSetColumn="LName" />
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Email" DataSetColumn="Email" />
              <Mapping SourceColumn="CampusMail" DataSetColumn="CampusMail" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Course RosterTableAdapter" GeneratorDataComponentClassName="Course_RosterTableAdapter" Name="Course Roster" UserDataComponentName="Course RosterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ScheduleLookup30ConnectionString (Settings)" DbObjectName="ScheduleLookup30.dbo.[Course Roster]" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Username, FName, LName, ID, Major_Name, Class, Year, Advisor, Email, CampusMail FROM dbo.[Course Roster]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Username" DataSetColumn="Username" />
              <Mapping SourceColumn="FName" DataSetColumn="FName" />
              <Mapping SourceColumn="LName" DataSetColumn="LName" />
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Major_Name" DataSetColumn="Major_Name" />
              <Mapping SourceColumn="Class" DataSetColumn="Class" />
              <Mapping SourceColumn="Year" DataSetColumn="Year" />
              <Mapping SourceColumn="Advisor" DataSetColumn="Advisor" />
              <Mapping SourceColumn="Email" DataSetColumn="Email" />
              <Mapping SourceColumn="CampusMail" DataSetColumn="CampusMail" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Schedule ViewTableAdapter" GeneratorDataComponentClassName="Schedule_ViewTableAdapter" Name="Schedule View" UserDataComponentName="Schedule ViewTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ScheduleLookup30ConnectionString (Settings)" DbObjectName="ScheduleLookup30.dbo.[Schedule View]" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Course, CRN, Title, Instructor, Cap, TermSchedule, Comments, CrHrs FROM dbo.[Schedule View]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Course" DataSetColumn="Course" />
              <Mapping SourceColumn="CRN" DataSetColumn="CRN" />
              <Mapping SourceColumn="Title" DataSetColumn="Title" />
              <Mapping SourceColumn="Instructor" DataSetColumn="Instructor" />
              <Mapping SourceColumn="Cap" DataSetColumn="Cap" />
              <Mapping SourceColumn="TermSchedule" DataSetColumn="TermSchedule" />
              <Mapping SourceColumn="Comments" DataSetColumn="Comments" />
              <Mapping SourceColumn="CrHrs" DataSetColumn="CrHrs" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Student ViewTableAdapter" GeneratorDataComponentClassName="Student_ViewTableAdapter" Name="Student View" UserDataComponentName="Student ViewTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ScheduleLookup30ConnectionString (Settings)" DbObjectName="ScheduleLookup30.dbo.[Student View]" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Course, CRN, Title, Cap, TermSchedule, Comments, CrHrs, username FROM dbo.[Student View]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Course" DataSetColumn="Course" />
              <Mapping SourceColumn="CRN" DataSetColumn="CRN" />
              <Mapping SourceColumn="Title" DataSetColumn="Title" />
              <Mapping SourceColumn="Cap" DataSetColumn="Cap" />
              <Mapping SourceColumn="TermSchedule" DataSetColumn="TermSchedule" />
              <Mapping SourceColumn="Comments" DataSetColumn="Comments" />
              <Mapping SourceColumn="CrHrs" DataSetColumn="CrHrs" />
              <Mapping SourceColumn="username" DataSetColumn="username" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Advisor Roster1TableAdapter" GeneratorDataComponentClassName="Advisor_Roster1TableAdapter" Name="Advisor Roster1" UserDataComponentName="Advisor Roster1TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ScheduleLookup30ConnectionString (Settings)" DbObjectName="ScheduleLookup30.dbo.[Advisor Roster1]" DbObjectType="Function" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Advisor, FName, LName, ID, Email, CampusMail FROM dbo.[Advisor Roster1]()</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Advisor" DataSetColumn="Advisor" />
              <Mapping SourceColumn="FName" DataSetColumn="FName" />
              <Mapping SourceColumn="LName" DataSetColumn="LName" />
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Email" DataSetColumn="Email" />
              <Mapping SourceColumn="CampusMail" DataSetColumn="CampusMail" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Course Roster1TableAdapter" GeneratorDataComponentClassName="Course_Roster1TableAdapter" Name="Course Roster1" UserDataComponentName="Course Roster1TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ScheduleLookup30ConnectionString (Settings)" DbObjectName="ScheduleLookup30.dbo.[Course Roster1]" DbObjectType="Function" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Username, FName, LName, ID, Major_Name, Class, Year, Advisor, Email, CampusMail FROM dbo.[Course Roster1]()</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Username" DataSetColumn="Username" />
              <Mapping SourceColumn="FName" DataSetColumn="FName" />
              <Mapping SourceColumn="LName" DataSetColumn="LName" />
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Major_Name" DataSetColumn="Major_Name" />
              <Mapping SourceColumn="Class" DataSetColumn="Class" />
              <Mapping SourceColumn="Year" DataSetColumn="Year" />
              <Mapping SourceColumn="Advisor" DataSetColumn="Advisor" />
              <Mapping SourceColumn="Email" DataSetColumn="Email" />
              <Mapping SourceColumn="CampusMail" DataSetColumn="CampusMail" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources>
          <DbSource ConnectionRef="ScheduleLookup30ConnectionString (Settings)" DbObjectName="ScheduleLookup30.dbo.Register" DbObjectType="StoredProcedure" GenerateShortCommands="true" GeneratorSourceName="Register" MethodsParameterType="CLR" Modifier="Public" Name="Register" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="Register">
            <SelectCommand>
              <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                <CommandText>dbo.Register</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="nvarchar" DbType="String" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="varchar" DbType="AnsiString" Direction="Input" ParameterName="@PasswordSalt" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="varchar" DbType="AnsiString" Direction="Input" ParameterName="@PasswordHash" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ScheduleLookup30DataSet2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="ScheduleLookup30DataSet2" msprop:Generator_UserDSName="ScheduleLookup30DataSet2">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Belong_To" msprop:Generator_TableClassName="Belong_ToDataTable" msprop:Generator_TableVarName="tableBelong_To" msprop:Generator_TablePropName="Belong_To" msprop:Generator_RowDeletingName="Belong_ToRowDeleting" msprop:Generator_RowChangingName="Belong_ToRowChanging" msprop:Generator_RowEvHandlerName="Belong_ToRowChangeEventHandler" msprop:Generator_RowDeletedName="Belong_ToRowDeleted" msprop:Generator_UserTableName="Belong_To" msprop:Generator_RowChangedName="Belong_ToRowChanged" msprop:Generator_RowEvArgName="Belong_ToRowChangeEvent" msprop:Generator_RowClassName="Belong_ToRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Course_ID" msprop:Generator_ColumnVarNameInTable="columnCourse_ID" msprop:Generator_ColumnPropNameInRow="Course_ID" msprop:Generator_ColumnPropNameInTable="Course_IDColumn" msprop:Generator_UserColumnName="Course_ID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Dept_ID" msprop:Generator_ColumnVarNameInTable="columnDept_ID" msprop:Generator_ColumnPropNameInRow="Dept_ID" msprop:Generator_ColumnPropNameInTable="Dept_IDColumn" msprop:Generator_UserColumnName="Dept_ID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Course" msprop:Generator_TableClassName="CourseDataTable" msprop:Generator_TableVarName="tableCourse" msprop:Generator_TablePropName="Course" msprop:Generator_RowDeletingName="CourseRowDeleting" msprop:Generator_RowChangingName="CourseRowChanging" msprop:Generator_RowEvHandlerName="CourseRowChangeEventHandler" msprop:Generator_RowDeletedName="CourseRowDeleted" msprop:Generator_UserTableName="Course" msprop:Generator_RowChangedName="CourseRowChanged" msprop:Generator_RowEvArgName="CourseRowChangeEvent" msprop:Generator_RowClassName="CourseRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Course_ID" msprop:Generator_ColumnVarNameInTable="columnCourse_ID" msprop:Generator_ColumnPropNameInRow="Course_ID" msprop:Generator_ColumnPropNameInTable="Course_IDColumn" msprop:Generator_UserColumnName="Course_ID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Title" msprop:Generator_ColumnVarNameInTable="columnTitle" msprop:Generator_ColumnPropNameInRow="Title" msprop:Generator_ColumnPropNameInTable="TitleColumn" msprop:Generator_UserColumnName="Title" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CreditHours" msprop:Generator_ColumnVarNameInTable="columnCreditHours" msprop:Generator_ColumnPropNameInRow="CreditHours" msprop:Generator_ColumnPropNameInTable="CreditHoursColumn" msprop:Generator_UserColumnName="CreditHours" type="xs:int" />
              <xs:element name="FinalExamSchedule" msprop:Generator_ColumnVarNameInTable="columnFinalExamSchedule" msprop:Generator_ColumnPropNameInRow="FinalExamSchedule" msprop:Generator_ColumnPropNameInTable="FinalExamScheduleColumn" msprop:Generator_UserColumnName="FinalExamSchedule" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Abbreviation" msprop:Generator_ColumnVarNameInTable="columnAbbreviation" msprop:Generator_ColumnPropNameInRow="Abbreviation" msprop:Generator_ColumnPropNameInTable="AbbreviationColumn" msprop:Generator_UserColumnName="Abbreviation" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Department" msprop:Generator_TableClassName="DepartmentDataTable" msprop:Generator_TableVarName="tableDepartment" msprop:Generator_TablePropName="Department" msprop:Generator_RowDeletingName="DepartmentRowDeleting" msprop:Generator_RowChangingName="DepartmentRowChanging" msprop:Generator_RowEvHandlerName="DepartmentRowChangeEventHandler" msprop:Generator_RowDeletedName="DepartmentRowDeleted" msprop:Generator_UserTableName="Department" msprop:Generator_RowChangedName="DepartmentRowChanged" msprop:Generator_RowEvArgName="DepartmentRowChangeEvent" msprop:Generator_RowClassName="DepartmentRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Abbreviation" msprop:Generator_ColumnVarNameInTable="columnAbbreviation" msprop:Generator_ColumnPropNameInRow="Abbreviation" msprop:Generator_ColumnPropNameInTable="AbbreviationColumn" msprop:Generator_UserColumnName="Abbreviation" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Enrolled_In" msprop:Generator_TableClassName="Enrolled_InDataTable" msprop:Generator_TableVarName="tableEnrolled_In" msprop:Generator_TablePropName="Enrolled_In" msprop:Generator_RowDeletingName="Enrolled_InRowDeleting" msprop:Generator_RowChangingName="Enrolled_InRowChanging" msprop:Generator_RowEvHandlerName="Enrolled_InRowChangeEventHandler" msprop:Generator_RowDeletedName="Enrolled_InRowDeleted" msprop:Generator_UserTableName="Enrolled_In" msprop:Generator_RowChangedName="Enrolled_InRowChanged" msprop:Generator_RowEvArgName="Enrolled_InRowChangeEvent" msprop:Generator_RowClassName="Enrolled_InRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Student_ID" msprop:Generator_ColumnVarNameInTable="columnStudent_ID" msprop:Generator_ColumnPropNameInRow="Student_ID" msprop:Generator_ColumnPropNameInTable="Student_IDColumn" msprop:Generator_UserColumnName="Student_ID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Section_CRN" msprop:Generator_ColumnVarNameInTable="columnSection_CRN" msprop:Generator_ColumnPropNameInRow="Section_CRN" msprop:Generator_ColumnPropNameInTable="Section_CRNColumn" msprop:Generator_UserColumnName="Section_CRN">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="8" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Has" msprop:Generator_TableClassName="HasDataTable" msprop:Generator_TableVarName="tableHas" msprop:Generator_TablePropName="Has" msprop:Generator_RowDeletingName="HasRowDeleting" msprop:Generator_RowChangingName="HasRowChanging" msprop:Generator_RowEvHandlerName="HasRowChangeEventHandler" msprop:Generator_RowDeletedName="HasRowDeleted" msprop:Generator_UserTableName="Has" msprop:Generator_RowChangedName="HasRowChanged" msprop:Generator_RowEvArgName="HasRowChangeEvent" msprop:Generator_RowClassName="HasRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Student_ID" msprop:Generator_ColumnVarNameInTable="columnStudent_ID" msprop:Generator_ColumnPropNameInRow="Student_ID" msprop:Generator_ColumnPropNameInTable="Student_IDColumn" msprop:Generator_UserColumnName="Student_ID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Major_Name" msprop:Generator_ColumnVarNameInTable="columnMajor_Name" msprop:Generator_ColumnPropNameInRow="Major_Name" msprop:Generator_ColumnPropNameInTable="Major_NameColumn" msprop:Generator_UserColumnName="Major_Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Major" msprop:Generator_TableClassName="MajorDataTable" msprop:Generator_TableVarName="tableMajor" msprop:Generator_TablePropName="Major" msprop:Generator_RowDeletingName="MajorRowDeleting" msprop:Generator_RowChangingName="MajorRowChanging" msprop:Generator_RowEvHandlerName="MajorRowChangeEventHandler" msprop:Generator_RowDeletedName="MajorRowDeleted" msprop:Generator_UserTableName="Major" msprop:Generator_RowChangedName="MajorRowChanged" msprop:Generator_RowEvArgName="MajorRowChangeEvent" msprop:Generator_RowClassName="MajorRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Department_ID" msprop:Generator_ColumnVarNameInTable="columnDepartment_ID" msprop:Generator_ColumnPropNameInRow="Department_ID" msprop:Generator_ColumnPropNameInTable="Department_IDColumn" msprop:Generator_UserColumnName="Department_ID" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Person" msprop:Generator_TableClassName="PersonDataTable" msprop:Generator_TableVarName="tablePerson" msprop:Generator_TablePropName="Person" msprop:Generator_RowDeletingName="PersonRowDeleting" msprop:Generator_RowChangingName="PersonRowChanging" msprop:Generator_RowEvHandlerName="PersonRowChangeEventHandler" msprop:Generator_RowDeletedName="PersonRowDeleted" msprop:Generator_UserTableName="Person" msprop:Generator_RowChangedName="PersonRowChanged" msprop:Generator_RowEvArgName="PersonRowChangeEvent" msprop:Generator_RowClassName="PersonRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" msprop:Generator_ColumnVarNameInTable="columnUsername" msprop:Generator_ColumnPropNameInRow="Username" msprop:Generator_ColumnPropNameInTable="UsernameColumn" msprop:Generator_UserColumnName="Username">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Email" msprop:Generator_ColumnVarNameInTable="columnEmail" msprop:Generator_ColumnPropNameInRow="Email" msprop:Generator_ColumnPropNameInTable="EmailColumn" msprop:Generator_UserColumnName="Email" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="FName" msprop:Generator_ColumnVarNameInTable="columnFName" msprop:Generator_ColumnPropNameInRow="FName" msprop:Generator_ColumnPropNameInTable="FNameColumn" msprop:Generator_UserColumnName="FName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LName" msprop:Generator_ColumnVarNameInTable="columnLName" msprop:Generator_ColumnPropNameInRow="LName" msprop:Generator_ColumnPropNameInTable="LNameColumn" msprop:Generator_UserColumnName="LName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CampusMail" msprop:Generator_ColumnVarNameInTable="columnCampusMail" msprop:Generator_ColumnPropNameInRow="CampusMail" msprop:Generator_ColumnPropNameInTable="CampusMailColumn" msprop:Generator_UserColumnName="CampusMail" type="xs:int" minOccurs="0" />
              <xs:element name="PasswordSalt" msprop:Generator_ColumnVarNameInTable="columnPasswordSalt" msprop:Generator_ColumnPropNameInRow="PasswordSalt" msprop:Generator_ColumnPropNameInTable="PasswordSaltColumn" msprop:Generator_UserColumnName="PasswordSalt" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PasswordHash" msprop:Generator_ColumnVarNameInTable="columnPasswordHash" msprop:Generator_ColumnPropNameInRow="PasswordHash" msprop:Generator_ColumnPropNameInTable="PasswordHashColumn" msprop:Generator_UserColumnName="PasswordHash" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Professor" msprop:Generator_TableClassName="ProfessorDataTable" msprop:Generator_TableVarName="tableProfessor" msprop:Generator_TablePropName="Professor" msprop:Generator_RowDeletingName="ProfessorRowDeleting" msprop:Generator_RowChangingName="ProfessorRowChanging" msprop:Generator_RowEvHandlerName="ProfessorRowChangeEventHandler" msprop:Generator_RowDeletedName="ProfessorRowDeleted" msprop:Generator_UserTableName="Professor" msprop:Generator_RowChangedName="ProfessorRowChanged" msprop:Generator_RowEvArgName="ProfessorRowChangeEvent" msprop:Generator_RowClassName="ProfessorRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Section" msprop:Generator_TableClassName="SectionDataTable" msprop:Generator_TableVarName="tableSection" msprop:Generator_TablePropName="Section" msprop:Generator_RowDeletingName="SectionRowDeleting" msprop:Generator_RowChangingName="SectionRowChanging" msprop:Generator_RowEvHandlerName="SectionRowChangeEventHandler" msprop:Generator_RowDeletedName="SectionRowDeleted" msprop:Generator_UserTableName="Section" msprop:Generator_RowChangedName="SectionRowChanged" msprop:Generator_RowEvArgName="SectionRowChangeEvent" msprop:Generator_RowClassName="SectionRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CRN" msprop:Generator_ColumnVarNameInTable="columnCRN" msprop:Generator_ColumnPropNameInRow="CRN" msprop:Generator_ColumnPropNameInTable="CRNColumn" msprop:Generator_UserColumnName="CRN">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="8" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Capacity" msprop:Generator_ColumnVarNameInTable="columnCapacity" msprop:Generator_ColumnPropNameInRow="Capacity" msprop:Generator_ColumnPropNameInTable="CapacityColumn" msprop:Generator_UserColumnName="Capacity" type="xs:int" minOccurs="0" />
              <xs:element name="TermSchedule" msprop:Generator_ColumnVarNameInTable="columnTermSchedule" msprop:Generator_ColumnPropNameInRow="TermSchedule" msprop:Generator_ColumnPropNameInTable="TermScheduleColumn" msprop:Generator_UserColumnName="TermSchedule" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Comments" msprop:Generator_ColumnVarNameInTable="columnComments" msprop:Generator_ColumnPropNameInRow="Comments" msprop:Generator_ColumnPropNameInTable="CommentsColumn" msprop:Generator_UserColumnName="Comments" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Student" msprop:Generator_TableClassName="StudentDataTable" msprop:Generator_TableVarName="tableStudent" msprop:Generator_TablePropName="Student" msprop:Generator_RowDeletingName="StudentRowDeleting" msprop:Generator_RowChangingName="StudentRowChanging" msprop:Generator_RowEvHandlerName="StudentRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentRowDeleted" msprop:Generator_UserTableName="Student" msprop:Generator_RowChangedName="StudentRowChanged" msprop:Generator_RowEvArgName="StudentRowChangeEvent" msprop:Generator_RowClassName="StudentRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Advisor" msprop:Generator_ColumnVarNameInTable="columnAdvisor" msprop:Generator_ColumnPropNameInRow="Advisor" msprop:Generator_ColumnPropNameInTable="AdvisorColumn" msprop:Generator_UserColumnName="Advisor" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Year" msprop:Generator_ColumnVarNameInTable="columnYear" msprop:Generator_ColumnPropNameInRow="Year" msprop:Generator_ColumnPropNameInTable="YearColumn" msprop:Generator_UserColumnName="Year">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="4" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Class" msprop:Generator_ColumnVarNameInTable="columnClass" msprop:Generator_ColumnPropNameInRow="Class" msprop:Generator_ColumnPropNameInTable="ClassColumn" msprop:Generator_UserColumnName="Class">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="4" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Teaches" msprop:Generator_TableClassName="TeachesDataTable" msprop:Generator_TableVarName="tableTeaches" msprop:Generator_TablePropName="Teaches" msprop:Generator_RowDeletingName="TeachesRowDeleting" msprop:Generator_RowChangingName="TeachesRowChanging" msprop:Generator_RowEvHandlerName="TeachesRowChangeEventHandler" msprop:Generator_RowDeletedName="TeachesRowDeleted" msprop:Generator_UserTableName="Teaches" msprop:Generator_RowChangedName="TeachesRowChanged" msprop:Generator_RowEvArgName="TeachesRowChangeEvent" msprop:Generator_RowClassName="TeachesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Professor_ID" msprop:Generator_ColumnVarNameInTable="columnProfessor_ID" msprop:Generator_ColumnPropNameInRow="Professor_ID" msprop:Generator_ColumnPropNameInTable="Professor_IDColumn" msprop:Generator_UserColumnName="Professor_ID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Section_CRN" msprop:Generator_ColumnVarNameInTable="columnSection_CRN" msprop:Generator_ColumnPropNameInRow="Section_CRN" msprop:Generator_ColumnPropNameInTable="Section_CRNColumn" msprop:Generator_UserColumnName="Section_CRN">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="8" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Works_For" msprop:Generator_TableClassName="Works_ForDataTable" msprop:Generator_TableVarName="tableWorks_For" msprop:Generator_TablePropName="Works_For" msprop:Generator_RowDeletingName="Works_ForRowDeleting" msprop:Generator_RowChangingName="Works_ForRowChanging" msprop:Generator_RowEvHandlerName="Works_ForRowChangeEventHandler" msprop:Generator_RowDeletedName="Works_ForRowDeleted" msprop:Generator_UserTableName="Works_For" msprop:Generator_RowChangedName="Works_ForRowChanged" msprop:Generator_RowEvArgName="Works_ForRowChangeEvent" msprop:Generator_RowClassName="Works_ForRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Professor_ID" msprop:Generator_ColumnVarNameInTable="columnProfessor_ID" msprop:Generator_ColumnPropNameInRow="Professor_ID" msprop:Generator_ColumnPropNameInTable="Professor_IDColumn" msprop:Generator_UserColumnName="Professor_ID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Dept_ID" msprop:Generator_ColumnVarNameInTable="columnDept_ID" msprop:Generator_ColumnPropNameInRow="Dept_ID" msprop:Generator_ColumnPropNameInTable="Dept_IDColumn" msprop:Generator_UserColumnName="Dept_ID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Advisor_x0020_Roster" msprop:Generator_TableClassName="Advisor_RosterDataTable" msprop:Generator_TableVarName="tableAdvisor_Roster" msprop:Generator_TablePropName="Advisor_Roster" msprop:Generator_RowDeletingName="Advisor_RosterRowDeleting" msprop:Generator_RowChangingName="Advisor_RosterRowChanging" msprop:Generator_RowEvHandlerName="Advisor_RosterRowChangeEventHandler" msprop:Generator_RowDeletedName="Advisor_RosterRowDeleted" msprop:Generator_UserTableName="Advisor Roster" msprop:Generator_RowChangedName="Advisor_RosterRowChanged" msprop:Generator_RowEvArgName="Advisor_RosterRowChangeEvent" msprop:Generator_RowClassName="Advisor_RosterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Advisor" msprop:Generator_ColumnVarNameInTable="columnAdvisor" msprop:Generator_ColumnPropNameInRow="Advisor" msprop:Generator_ColumnPropNameInTable="AdvisorColumn" msprop:Generator_UserColumnName="Advisor" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="FName" msprop:Generator_ColumnVarNameInTable="columnFName" msprop:Generator_ColumnPropNameInRow="FName" msprop:Generator_ColumnPropNameInTable="FNameColumn" msprop:Generator_UserColumnName="FName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LName" msprop:Generator_ColumnVarNameInTable="columnLName" msprop:Generator_ColumnPropNameInRow="LName" msprop:Generator_ColumnPropNameInTable="LNameColumn" msprop:Generator_UserColumnName="LName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Email" msprop:Generator_ColumnVarNameInTable="columnEmail" msprop:Generator_ColumnPropNameInRow="Email" msprop:Generator_ColumnPropNameInTable="EmailColumn" msprop:Generator_UserColumnName="Email" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CampusMail" msprop:Generator_ColumnVarNameInTable="columnCampusMail" msprop:Generator_ColumnPropNameInRow="CampusMail" msprop:Generator_ColumnPropNameInTable="CampusMailColumn" msprop:Generator_UserColumnName="CampusMail" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Course_x0020_Roster" msprop:Generator_TableClassName="Course_RosterDataTable" msprop:Generator_TableVarName="tableCourse_Roster" msprop:Generator_TablePropName="Course_Roster" msprop:Generator_RowDeletingName="Course_RosterRowDeleting" msprop:Generator_RowChangingName="Course_RosterRowChanging" msprop:Generator_RowEvHandlerName="Course_RosterRowChangeEventHandler" msprop:Generator_RowDeletedName="Course_RosterRowDeleted" msprop:Generator_UserTableName="Course Roster" msprop:Generator_RowChangedName="Course_RosterRowChanged" msprop:Generator_RowEvArgName="Course_RosterRowChangeEvent" msprop:Generator_RowClassName="Course_RosterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" msprop:Generator_ColumnVarNameInTable="columnUsername" msprop:Generator_ColumnPropNameInRow="Username" msprop:Generator_ColumnPropNameInTable="UsernameColumn" msprop:Generator_UserColumnName="Username">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="FName" msprop:Generator_ColumnVarNameInTable="columnFName" msprop:Generator_ColumnPropNameInRow="FName" msprop:Generator_ColumnPropNameInTable="FNameColumn" msprop:Generator_UserColumnName="FName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LName" msprop:Generator_ColumnVarNameInTable="columnLName" msprop:Generator_ColumnPropNameInRow="LName" msprop:Generator_ColumnPropNameInTable="LNameColumn" msprop:Generator_UserColumnName="LName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Major_Name" msprop:Generator_ColumnVarNameInTable="columnMajor_Name" msprop:Generator_ColumnPropNameInRow="Major_Name" msprop:Generator_ColumnPropNameInTable="Major_NameColumn" msprop:Generator_UserColumnName="Major_Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Class" msprop:Generator_ColumnVarNameInTable="columnClass" msprop:Generator_ColumnPropNameInRow="Class" msprop:Generator_ColumnPropNameInTable="ClassColumn" msprop:Generator_UserColumnName="Class">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="4" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Year" msprop:Generator_ColumnVarNameInTable="columnYear" msprop:Generator_ColumnPropNameInRow="Year" msprop:Generator_ColumnPropNameInTable="YearColumn" msprop:Generator_UserColumnName="Year">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="4" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Advisor" msprop:Generator_ColumnVarNameInTable="columnAdvisor" msprop:Generator_ColumnPropNameInRow="Advisor" msprop:Generator_ColumnPropNameInTable="AdvisorColumn" msprop:Generator_UserColumnName="Advisor" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Email" msprop:Generator_ColumnVarNameInTable="columnEmail" msprop:Generator_ColumnPropNameInRow="Email" msprop:Generator_ColumnPropNameInTable="EmailColumn" msprop:Generator_UserColumnName="Email" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CampusMail" msprop:Generator_ColumnVarNameInTable="columnCampusMail" msprop:Generator_ColumnPropNameInRow="CampusMail" msprop:Generator_ColumnPropNameInTable="CampusMailColumn" msprop:Generator_UserColumnName="CampusMail" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Schedule_x0020_View" msprop:Generator_TableClassName="Schedule_ViewDataTable" msprop:Generator_TableVarName="tableSchedule_View" msprop:Generator_TablePropName="Schedule_View" msprop:Generator_RowDeletingName="Schedule_ViewRowDeleting" msprop:Generator_RowChangingName="Schedule_ViewRowChanging" msprop:Generator_RowEvHandlerName="Schedule_ViewRowChangeEventHandler" msprop:Generator_RowDeletedName="Schedule_ViewRowDeleted" msprop:Generator_UserTableName="Schedule View" msprop:Generator_RowChangedName="Schedule_ViewRowChanged" msprop:Generator_RowEvArgName="Schedule_ViewRowChangeEvent" msprop:Generator_RowClassName="Schedule_ViewRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Course" msprop:Generator_ColumnVarNameInTable="columnCourse" msprop:Generator_ColumnPropNameInRow="Course" msprop:Generator_ColumnPropNameInTable="CourseColumn" msprop:Generator_UserColumnName="Course" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CRN" msprop:Generator_ColumnVarNameInTable="columnCRN" msprop:Generator_ColumnPropNameInRow="CRN" msprop:Generator_ColumnPropNameInTable="CRNColumn" msprop:Generator_UserColumnName="CRN">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Title" msprop:Generator_ColumnVarNameInTable="columnTitle" msprop:Generator_ColumnPropNameInRow="Title" msprop:Generator_ColumnPropNameInTable="TitleColumn" msprop:Generator_UserColumnName="Title" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Instructor" msprop:Generator_ColumnVarNameInTable="columnInstructor" msprop:Generator_ColumnPropNameInRow="Instructor" msprop:Generator_ColumnPropNameInTable="InstructorColumn" msprop:Generator_UserColumnName="Instructor">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Cap" msprop:Generator_ColumnVarNameInTable="columnCap" msprop:Generator_ColumnPropNameInRow="Cap" msprop:Generator_ColumnPropNameInTable="CapColumn" msprop:Generator_UserColumnName="Cap" type="xs:int" minOccurs="0" />
              <xs:element name="TermSchedule" msprop:Generator_ColumnVarNameInTable="columnTermSchedule" msprop:Generator_ColumnPropNameInRow="TermSchedule" msprop:Generator_ColumnPropNameInTable="TermScheduleColumn" msprop:Generator_UserColumnName="TermSchedule" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Comments" msprop:Generator_ColumnVarNameInTable="columnComments" msprop:Generator_ColumnPropNameInRow="Comments" msprop:Generator_ColumnPropNameInTable="CommentsColumn" msprop:Generator_UserColumnName="Comments" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CrHrs" msprop:Generator_ColumnVarNameInTable="columnCrHrs" msprop:Generator_ColumnPropNameInRow="CrHrs" msprop:Generator_ColumnPropNameInTable="CrHrsColumn" msprop:Generator_UserColumnName="CrHrs" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Student_x0020_View" msprop:Generator_TableClassName="Student_ViewDataTable" msprop:Generator_TableVarName="tableStudent_View" msprop:Generator_TablePropName="Student_View" msprop:Generator_RowDeletingName="Student_ViewRowDeleting" msprop:Generator_RowChangingName="Student_ViewRowChanging" msprop:Generator_RowEvHandlerName="Student_ViewRowChangeEventHandler" msprop:Generator_RowDeletedName="Student_ViewRowDeleted" msprop:Generator_UserTableName="Student View" msprop:Generator_RowChangedName="Student_ViewRowChanged" msprop:Generator_RowEvArgName="Student_ViewRowChangeEvent" msprop:Generator_RowClassName="Student_ViewRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Course" msprop:Generator_ColumnVarNameInTable="columnCourse" msprop:Generator_ColumnPropNameInRow="Course" msprop:Generator_ColumnPropNameInTable="CourseColumn" msprop:Generator_UserColumnName="Course" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CRN" msprop:Generator_ColumnVarNameInTable="columnCRN" msprop:Generator_ColumnPropNameInRow="CRN" msprop:Generator_ColumnPropNameInTable="CRNColumn" msprop:Generator_UserColumnName="CRN">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Title" msprop:Generator_ColumnVarNameInTable="columnTitle" msprop:Generator_ColumnPropNameInRow="Title" msprop:Generator_ColumnPropNameInTable="TitleColumn" msprop:Generator_UserColumnName="Title" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Cap" msprop:Generator_ColumnVarNameInTable="columnCap" msprop:Generator_ColumnPropNameInRow="Cap" msprop:Generator_ColumnPropNameInTable="CapColumn" msprop:Generator_UserColumnName="Cap" type="xs:int" minOccurs="0" />
              <xs:element name="TermSchedule" msprop:Generator_ColumnVarNameInTable="columnTermSchedule" msprop:Generator_ColumnPropNameInRow="TermSchedule" msprop:Generator_ColumnPropNameInTable="TermScheduleColumn" msprop:Generator_UserColumnName="TermSchedule" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Comments" msprop:Generator_ColumnVarNameInTable="columnComments" msprop:Generator_ColumnPropNameInRow="Comments" msprop:Generator_ColumnPropNameInTable="CommentsColumn" msprop:Generator_UserColumnName="Comments" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CrHrs" msprop:Generator_ColumnVarNameInTable="columnCrHrs" msprop:Generator_ColumnPropNameInRow="CrHrs" msprop:Generator_ColumnPropNameInTable="CrHrsColumn" msprop:Generator_UserColumnName="CrHrs" type="xs:int" />
              <xs:element name="username" msprop:Generator_ColumnVarNameInTable="columnusername" msprop:Generator_ColumnPropNameInRow="username" msprop:Generator_ColumnPropNameInTable="usernameColumn" msprop:Generator_UserColumnName="username">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Advisor_x0020_Roster1" msprop:Generator_TableClassName="Advisor_Roster1DataTable" msprop:Generator_TableVarName="tableAdvisor_Roster1" msprop:Generator_TablePropName="Advisor_Roster1" msprop:Generator_RowDeletingName="Advisor_Roster1RowDeleting" msprop:Generator_RowChangingName="Advisor_Roster1RowChanging" msprop:Generator_RowEvHandlerName="Advisor_Roster1RowChangeEventHandler" msprop:Generator_RowDeletedName="Advisor_Roster1RowDeleted" msprop:Generator_UserTableName="Advisor Roster1" msprop:Generator_RowChangedName="Advisor_Roster1RowChanged" msprop:Generator_RowEvArgName="Advisor_Roster1RowChangeEvent" msprop:Generator_RowClassName="Advisor_Roster1Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Advisor" msprop:Generator_ColumnVarNameInTable="columnAdvisor" msprop:Generator_ColumnPropNameInRow="Advisor" msprop:Generator_ColumnPropNameInTable="AdvisorColumn" msprop:Generator_UserColumnName="Advisor" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="FName" msprop:Generator_ColumnVarNameInTable="columnFName" msprop:Generator_ColumnPropNameInRow="FName" msprop:Generator_ColumnPropNameInTable="FNameColumn" msprop:Generator_UserColumnName="FName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LName" msprop:Generator_ColumnVarNameInTable="columnLName" msprop:Generator_ColumnPropNameInRow="LName" msprop:Generator_ColumnPropNameInTable="LNameColumn" msprop:Generator_UserColumnName="LName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Email" msprop:Generator_ColumnVarNameInTable="columnEmail" msprop:Generator_ColumnPropNameInRow="Email" msprop:Generator_ColumnPropNameInTable="EmailColumn" msprop:Generator_UserColumnName="Email" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CampusMail" msprop:Generator_ColumnVarNameInTable="columnCampusMail" msprop:Generator_ColumnPropNameInRow="CampusMail" msprop:Generator_ColumnPropNameInTable="CampusMailColumn" msprop:Generator_UserColumnName="CampusMail" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Course_x0020_Roster1" msprop:Generator_TableClassName="Course_Roster1DataTable" msprop:Generator_TableVarName="tableCourse_Roster1" msprop:Generator_TablePropName="Course_Roster1" msprop:Generator_RowDeletingName="Course_Roster1RowDeleting" msprop:Generator_RowChangingName="Course_Roster1RowChanging" msprop:Generator_RowEvHandlerName="Course_Roster1RowChangeEventHandler" msprop:Generator_RowDeletedName="Course_Roster1RowDeleted" msprop:Generator_UserTableName="Course Roster1" msprop:Generator_RowChangedName="Course_Roster1RowChanged" msprop:Generator_RowEvArgName="Course_Roster1RowChangeEvent" msprop:Generator_RowClassName="Course_Roster1Row">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" msprop:Generator_ColumnVarNameInTable="columnUsername" msprop:Generator_ColumnPropNameInRow="Username" msprop:Generator_ColumnPropNameInTable="UsernameColumn" msprop:Generator_UserColumnName="Username">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="FName" msprop:Generator_ColumnVarNameInTable="columnFName" msprop:Generator_ColumnPropNameInRow="FName" msprop:Generator_ColumnPropNameInTable="FNameColumn" msprop:Generator_UserColumnName="FName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LName" msprop:Generator_ColumnVarNameInTable="columnLName" msprop:Generator_ColumnPropNameInRow="LName" msprop:Generator_ColumnPropNameInTable="LNameColumn" msprop:Generator_UserColumnName="LName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Major_Name" msprop:Generator_ColumnVarNameInTable="columnMajor_Name" msprop:Generator_ColumnPropNameInRow="Major_Name" msprop:Generator_ColumnPropNameInTable="Major_NameColumn" msprop:Generator_UserColumnName="Major_Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Class" msprop:Generator_ColumnVarNameInTable="columnClass" msprop:Generator_ColumnPropNameInRow="Class" msprop:Generator_ColumnPropNameInTable="ClassColumn" msprop:Generator_UserColumnName="Class">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="4" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Year" msprop:Generator_ColumnVarNameInTable="columnYear" msprop:Generator_ColumnPropNameInRow="Year" msprop:Generator_ColumnPropNameInTable="YearColumn" msprop:Generator_UserColumnName="Year">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="4" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Advisor" msprop:Generator_ColumnVarNameInTable="columnAdvisor" msprop:Generator_ColumnPropNameInRow="Advisor" msprop:Generator_ColumnPropNameInTable="AdvisorColumn" msprop:Generator_UserColumnName="Advisor" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Email" msprop:Generator_ColumnVarNameInTable="columnEmail" msprop:Generator_ColumnPropNameInRow="Email" msprop:Generator_ColumnPropNameInTable="EmailColumn" msprop:Generator_UserColumnName="Email" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CampusMail" msprop:Generator_ColumnVarNameInTable="columnCampusMail" msprop:Generator_ColumnPropNameInRow="CampusMail" msprop:Generator_ColumnPropNameInTable="CampusMailColumn" msprop:Generator_UserColumnName="CampusMail" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Belong_To" />
      <xs:field xpath="mstns:Course_ID" />
      <xs:field xpath="mstns:Dept_ID" />
    </xs:unique>
    <xs:unique name="Course_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Course" />
      <xs:field xpath="mstns:Course_ID" />
    </xs:unique>
    <xs:unique name="Department_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Department" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Enrolled_In_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Enrolled_In" />
      <xs:field xpath="mstns:Student_ID" />
      <xs:field xpath="mstns:Section_CRN" />
    </xs:unique>
    <xs:unique name="Has_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Has" />
      <xs:field xpath="mstns:Student_ID" />
      <xs:field xpath="mstns:Major_Name" />
    </xs:unique>
    <xs:unique name="Major_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Major" />
      <xs:field xpath="mstns:Name" />
    </xs:unique>
    <xs:unique name="Person_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Person" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Professor_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Professor" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Section_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Section" />
      <xs:field xpath="mstns:CRN" />
    </xs:unique>
    <xs:unique name="Student_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Student" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Teaches_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Teaches" />
      <xs:field xpath="mstns:Professor_ID" />
      <xs:field xpath="mstns:Section_CRN" />
    </xs:unique>
    <xs:unique name="Works_For_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Works_For" />
      <xs:field xpath="mstns:Professor_ID" />
      <xs:field xpath="mstns:Dept_ID" />
    </xs:unique>
    <xs:unique name="Advisor_x0020_Roster_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Advisor_x0020_Roster" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Course_x0020_Roster_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Course_x0020_Roster" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Schedule_x0020_View_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Schedule_x0020_View" />
      <xs:field xpath="mstns:CRN" />
    </xs:unique>
    <xs:unique name="Student_x0020_View_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Student_x0020_View" />
      <xs:field xpath="mstns:CRN" />
    </xs:unique>
    <xs:unique name="Advisor_x0020_Roster1_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Advisor_x0020_Roster1" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Course_x0020_Roster1_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Course_x0020_Roster1" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Belong_To_Belong_To" msdata:parent="Course" msdata:child="Belong_To" msdata:parentkey="Course_ID" msdata:childkey="Course_ID" msprop:Generator_UserChildTable="Belong_To" msprop:Generator_ChildPropName="GetBelong_ToRows" msprop:Generator_UserRelationName="FK_Belong_To_Belong_To" msprop:Generator_RelationVarName="relationFK_Belong_To_Belong_To" msprop:Generator_UserParentTable="Course" msprop:Generator_ParentPropName="CourseRow" />
      <msdata:Relationship name="FK_Belong_To_Department" msdata:parent="Department" msdata:child="Belong_To" msdata:parentkey="ID" msdata:childkey="Dept_ID" msprop:Generator_UserChildTable="Belong_To" msprop:Generator_ChildPropName="GetBelong_ToRows" msprop:Generator_UserRelationName="FK_Belong_To_Department" msprop:Generator_RelationVarName="relationFK_Belong_To_Department" msprop:Generator_UserParentTable="Department" msprop:Generator_ParentPropName="DepartmentRow" />
      <msdata:Relationship name="FK_Enrolled_In_Enrolled_In" msdata:parent="Section" msdata:child="Enrolled_In" msdata:parentkey="CRN" msdata:childkey="Section_CRN" msprop:Generator_UserChildTable="Enrolled_In" msprop:Generator_ChildPropName="GetEnrolled_InRows" msprop:Generator_UserRelationName="FK_Enrolled_In_Enrolled_In" msprop:Generator_RelationVarName="relationFK_Enrolled_In_Enrolled_In" msprop:Generator_UserParentTable="Section" msprop:Generator_ParentPropName="SectionRow" />
      <msdata:Relationship name="FK_Enrolled_In_Student" msdata:parent="Student" msdata:child="Enrolled_In" msdata:parentkey="ID" msdata:childkey="Student_ID" msprop:Generator_UserChildTable="Enrolled_In" msprop:Generator_ChildPropName="GetEnrolled_InRows" msprop:Generator_UserRelationName="FK_Enrolled_In_Student" msprop:Generator_RelationVarName="relationFK_Enrolled_In_Student" msprop:Generator_UserParentTable="Student" msprop:Generator_ParentPropName="StudentRow" />
      <msdata:Relationship name="FK_Has_Major" msdata:parent="Major" msdata:child="Has" msdata:parentkey="Name" msdata:childkey="Major_Name" msprop:Generator_UserChildTable="Has" msprop:Generator_ChildPropName="GetHasRows" msprop:Generator_UserRelationName="FK_Has_Major" msprop:Generator_RelationVarName="relationFK_Has_Major" msprop:Generator_UserParentTable="Major" msprop:Generator_ParentPropName="MajorRow" />
      <msdata:Relationship name="FK_Has_Student" msdata:parent="Student" msdata:child="Has" msdata:parentkey="ID" msdata:childkey="Student_ID" msprop:Generator_UserChildTable="Has" msprop:Generator_ChildPropName="GetHasRows" msprop:Generator_UserRelationName="FK_Has_Student" msprop:Generator_RelationVarName="relationFK_Has_Student" msprop:Generator_UserParentTable="Student" msprop:Generator_ParentPropName="StudentRow" />
      <msdata:Relationship name="FK_Major_Department" msdata:parent="Department" msdata:child="Major" msdata:parentkey="ID" msdata:childkey="Department_ID" msprop:Generator_UserChildTable="Major" msprop:Generator_ChildPropName="GetMajorRows" msprop:Generator_UserRelationName="FK_Major_Department" msprop:Generator_ParentPropName="DepartmentRow" msprop:Generator_RelationVarName="relationFK_Major_Department" msprop:Generator_UserParentTable="Department" />
      <msdata:Relationship name="FK_Professor_Professor" msdata:parent="Person" msdata:child="Professor" msdata:parentkey="ID" msdata:childkey="ID" msprop:Generator_UserChildTable="Professor" msprop:Generator_ChildPropName="GetProfessorRows" msprop:Generator_UserRelationName="FK_Professor_Professor" msprop:Generator_ParentPropName="PersonRow" msprop:Generator_RelationVarName="relationFK_Professor_Professor" msprop:Generator_UserParentTable="Person" />
      <msdata:Relationship name="FK_Student_Professor" msdata:parent="Professor" msdata:child="Student" msdata:parentkey="ID" msdata:childkey="Advisor" msprop:Generator_UserChildTable="Student" msprop:Generator_ChildPropName="GetStudentRows" msprop:Generator_UserRelationName="FK_Student_Professor" msprop:Generator_ParentPropName="ProfessorRow" msprop:Generator_RelationVarName="relationFK_Student_Professor" msprop:Generator_UserParentTable="Professor" />
      <msdata:Relationship name="FK_Teaches_Professor" msdata:parent="Professor" msdata:child="Teaches" msdata:parentkey="ID" msdata:childkey="Professor_ID" msprop:Generator_UserChildTable="Teaches" msprop:Generator_ChildPropName="GetTeachesRows" msprop:Generator_UserRelationName="FK_Teaches_Professor" msprop:Generator_ParentPropName="ProfessorRow" msprop:Generator_RelationVarName="relationFK_Teaches_Professor" msprop:Generator_UserParentTable="Professor" />
      <msdata:Relationship name="FK_Teaches_Section" msdata:parent="Section" msdata:child="Teaches" msdata:parentkey="CRN" msdata:childkey="Section_CRN" msprop:Generator_UserChildTable="Teaches" msprop:Generator_ChildPropName="GetTeachesRows" msprop:Generator_UserRelationName="FK_Teaches_Section" msprop:Generator_ParentPropName="SectionRow" msprop:Generator_RelationVarName="relationFK_Teaches_Section" msprop:Generator_UserParentTable="Section" />
      <msdata:Relationship name="FK_Works_For_Department" msdata:parent="Department" msdata:child="Works_For" msdata:parentkey="ID" msdata:childkey="Dept_ID" msprop:Generator_UserChildTable="Works_For" msprop:Generator_ChildPropName="GetWorks_ForRows" msprop:Generator_UserRelationName="FK_Works_For_Department" msprop:Generator_ParentPropName="DepartmentRow" msprop:Generator_RelationVarName="relationFK_Works_For_Department" msprop:Generator_UserParentTable="Department" />
      <msdata:Relationship name="FK_Works_For_Professor" msdata:parent="Professor" msdata:child="Works_For" msdata:parentkey="ID" msdata:childkey="Professor_ID" msprop:Generator_UserChildTable="Works_For" msprop:Generator_ChildPropName="GetWorks_ForRows" msprop:Generator_UserRelationName="FK_Works_For_Professor" msprop:Generator_ParentPropName="ProfessorRow" msprop:Generator_RelationVarName="relationFK_Works_For_Professor" msprop:Generator_UserParentTable="Professor" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>